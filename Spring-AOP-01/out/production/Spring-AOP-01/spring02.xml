<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">

    <aop:aspectj-autoproxy/>

    <bean id="shapeService" class="hitachi.service.ShapeService" autowire="byName"/>

    <bean id="circle" class="hitachi.model.Circle">
        <property name="name" value="Circle Name"/>
    </bean>

    <bean id="triangle" class="hitachi.model.Triangle">
        <property name="name" value="Triangle Name"/>
    </bean>

    <bean id="loggingAspect" class="hitachi.aspect.LoggingAspect"/>

    <aop:config>
        <aop:aspect id="loggingAspect" ref="loggingAspect">
            <!-- 1. Creating separate aop:before and aop:pointcut -->
            <aop:pointcut id="allGetters" expression="execution(public * get*())"/>
            <aop:before method="loggingAdvice" pointcut-ref="allGetters"/>

<!--            <aop:before method="securityAdvice" pointcut="execution(public * set*())"/>-->
        </aop:aspect>
    </aop:config>
</beans>